{{> layout/header}}
<input type="hidden" id="subjectId" value="{{subjectId}}">

<div class="container mt-5 mb-5">
    <div class="subject-form-card">
        <div class="card-header">교과목 요소 등록</div>

        <div class="form-section text-end">
            <button type="button" class="btn btn-sm btn-primary" onclick="addElement()">+ 요소 추가</button>
        </div>

        <div id="element-input-box">
            <div class="subject-element-item">
                <div class="form-section">
                    <label class="form-label">순번</label>
                    <input type="text" class="form-control no" placeholder="순번" value="1">
                </div>
                <div class="form-section">
                    <label class="form-label">교과목 요소명</label>
                    <input type="text" class="form-control subtitle" placeholder="교과목 요소명" value="오버로딩">
                </div>
                <div class="form-section">
                    <label class="form-label">교과목 요소 평가기준</label>
                    <input type="text" class="form-control subjectElementPurpose" placeholder="평가기준"
                           value="여러 메서드를 타입, 매개변수를 변경하여 재사용할 수 있다.">
                </div>
            </div>
        </div>

        <button type="button" onclick="saveElement()" class="btn btn-primary form-control mt-3">교과목 요소 등록</button>
    </div>
</div>

<script>
    async function saveElement() {
        const subjectId = document.querySelector("#subjectId").value;
        const items = document.querySelectorAll("#element-input-box .subject-element-item");

        const subjectElements = Array.from(items).map((element) => {
            const no = element.querySelector(".no").value;
            const subtitle = element.querySelector(".subtitle").value;
            const subjectElementPurpose = element.querySelector(".subjectElementPurpose").value;
            return {no, subtitle, subjectElementPurpose};
        });

        try {
            const response = await fetch(`/api/course-menu/subject/${subjectId}/element/save`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json; charset=utf-8"
                },
                body: JSON.stringify(subjectElements)
            });

            if (response.ok) {
                location.href = `/api/course-menu/subject/${subjectId}/element`;
            } else {
                const errorData = await response.json();
                alert(errorData.msg);
            }
        } catch (error) {
            alert("서버 요청 중 오류가 발생했습니다.");
            console.error(error);
        }
    }

    function addElement() {
        const elementHtml = `
            <div class="subject-element-item">
                <div class="form-section">
                    <label class="form-label">순번</label>
                    <input type="text" class="form-control no" placeholder="순번" value="2">
                </div>
                <div class="form-section">
                    <label class="form-label">교과목 요소명</label>
                    <input type="text" class="form-control subtitle" placeholder="교과목 요소명" value="객체지향">
                </div>
                <div class="form-section">
                    <label class="form-label">교과목 요소 평가기준</label>
                    <input type="text" class="form-control subjectElementPurpose" placeholder="평가기준"
                           value="디자인 패턴을 활용할 수 있다.">
                </div>
            </div>
        `;
        document.querySelector("#element-input-box").insertAdjacentHTML("beforeend", elementHtml);
    }
</script>

{{> layout/footer}}