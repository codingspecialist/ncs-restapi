{{> layout/header}}

<style>
    .paper-form-card {
        background: #ffffff;
        border-radius: 16px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.06);
        padding: 2.5rem;
        max-width: 840px;
        margin: 0 auto;
    }

    .paper-form-card .card-header {
        background-color: transparent;
        font-size: 1.5rem;
        font-weight: bold;
        border-bottom: 2px solid #eee;
        margin-bottom: 1.5rem;
        padding-bottom: 1rem;
    }

    .form-label {
        font-weight: 600;
        margin-bottom: 0.3rem;
    }

    .form-control,
    .form-select {
        border-radius: 10px;
    }

    .btn-primary {
        padding: 0.75rem;
        font-weight: bold;
        font-size: 1rem;
        border-radius: 12px;
        width: 100%; /* 버튼 너비를 100%로 설정 */
    }

    .form-section {
        margin-bottom: 1.4rem; /* 일관된 섹션 간격 */
    }

    /* 서명 패드 스타일 */
    #signature-pad {
        border: 1px solid #dee2e6; /* 캔버스 테두리 추가 */
        border-radius: 10px;
        background-color: #f8f9fa; /* 캔버스 배경색 */
        display: block; /* 가운데 정렬을 위해 */
        margin: 0 auto; /* 캔버스 가운데 정렬 */
        max-width: 100%; /* 반응형 */
    }
</style>

<div class="container mt-5 mb-5">
    <div class="paper-form-card">
        <div class="card-header">선생님 안녕하세요. 사인을 저장해주세요.</div>

        <div class="form-section text-center">
            <canvas id="signature-pad" width="300" height="300"></canvas>
        </div>

        <div class="form-section">
            <button type="button" class="btn btn-primary" onclick="saveSignature()">저장</button>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    let canvas = document.getElementById('signature-pad');
    let context = canvas.getContext('2d');

    context.lineWidth = 4;  // 선의 굵기를 5픽셀로 설정
    context.strokeStyle = '#000000'; // 선의 색상을 검정으로 설정, 필요에 따라 색상 변경 가능

    let drawing = false;
    let outside = false; // 마우스가 캔버스 밖으로 나갔는지 여부
    let lastX = 0;
    let lastY = 0;

    // 마우스 이벤트 리스너
    canvas.addEventListener('mousedown', startDrawing);
    canvas.addEventListener('mousemove', draw);
    canvas.addEventListener('mouseup', stopDrawing);
    canvas.addEventListener('mouseout', function (e) {
        // console.log("마우스 나감 : " + drawing); // 디버깅용
        if (drawing) {
            stopDrawing(e, true); // 캔버스 밖으로 나갔지만 그리는 중이었음
        }
    });
    canvas.addEventListener('mouseenter', function (e) {
        // console.log("마우스 들어옴 : " + drawing); // 디버깅용
        if (outside && drawing) { // 이전에 밖으로 나갔고, 여전히 그리는 중이어야 함
            startDrawing(e, true); // 마우스가 캔바스 밖으로 나갔다가 돌아왔을 때 재시작 (이전 선과 연결)
            lastX = e.offsetX; // 새로운 시작점을 현재 위치로 설정
            lastY = e.offsetY;
        }
    });

    // 터치 이벤트 리스너 (모바일 기기 지원)
    canvas.addEventListener('touchstart', (e) => {
        e.preventDefault(); // 스크롤 방지
        const touch = e.touches[0];
        startDrawing({
            offsetX: touch.clientX - canvas.getBoundingClientRect().left,
            offsetY: touch.clientY - canvas.getBoundingClientRect().top
        });
    }, {passive: false}); // passive: false로 설정하여 preventDefault() 가능하게 함

    canvas.addEventListener('touchmove', (e) => {
        e.preventDefault(); // 스크롤 방지
        if (!drawing) return;
        const touch = e.touches[0];
        draw({
            offsetX: touch.clientX - canvas.getBoundingClientRect().left,
            offsetY: touch.clientY - canvas.getBoundingClientRect().top
        });
    }, {passive: false});

    canvas.addEventListener('touchend', stopDrawing);
    canvas.addEventListener('touchcancel', stopDrawing);


    function cancelSignature() {
        context.clearRect(0, 0, canvas.width, canvas.height);
    }

    function startDrawing(e, continueDrawing = false) {
        drawing = true;
        outside = false; // 마우스가 다시 캔버스 안으로 들어왔으니 outside는 false
        if (!continueDrawing) { // 캔버스 밖으로 나갔다 들어온 경우가 아니라면 새로운 시작점 설정
            lastX = e.offsetX;
            lastY = e.offsetY;
        }
        context.beginPath(); // 새로운 경로 시작 (이전 경로와 연결되지 않도록)
        context.moveTo(lastX, lastY); // 시작점을 새로운 lastX, lastY로 설정
    }

    function draw(e) {
        if (!drawing) return;
        context.lineTo(e.offsetX, e.offsetY);
        context.stroke();
        lastX = e.offsetX;
        lastY = e.offsetY;
    }

    function stopDrawing(e, leftCanvas = false) {
        drawing = false; // 그리기 상태 종료
        outside = leftCanvas; // 캔버스 밖으로 나갔는지 상태 저장
    }

    function saveSignature() {
        // 캔버스에 내용이 있는지 확인 (모든 픽셀이 투명한지 검사)
        const imageData = context.getImageData(0, 0, canvas.width, canvas.height);
        let hasContent = false;
        for (let i = 0; i < imageData.data.length; i += 4) {
            if (imageData.data[i + 3] > 0) { // alpha channel (투명도)가 0보다 크면 내용이 있음
                hasContent = true;
                break;
            }
        }

        if (!hasContent) {
            alert("서명을 해주세요.");
            return;
        }

        const dataUrl = canvas.toDataURL('image/png'); // 서명을 PNG 이미지로 변환

        let requestBody = {
            sign: dataUrl
        }

        // jQuery AJAX 사용 (기존 코드 유지)
        $.ajax({
            url: `/sign`,
            method: "put",
            data: JSON.stringify(requestBody),
            contentType: "application/json; charset=utf-8"
        }).done((res) => {
            alert("사인이 성공적으로 저장되었습니다.");
            location.href = '/'; // 저장 성공 시 메인 페이지로 이동
        }).fail((xhr) => { // res 대신 xhr (XMLHttpRequest) 객체를 받는 것이 일반적
            let errorMsg = "사인 저장 실패: 알 수 없는 오류";
            if (xhr.responseJSON && xhr.responseJSON.msg) {
                errorMsg = "사인 저장 실패: " + xhr.responseJSON.msg;
            } else if (xhr.responseText) {
                try {
                    const parsedError = JSON.parse(xhr.responseText);
                    errorMsg = "사인 저장 실패: " + (parsedError.msg || xhr.responseText);
                } catch (e) {
                    errorMsg = "사인 저장 실패: " + xhr.responseText;
                }
            }
            alert(errorMsg);
            console.error("사인 저장 에러:", xhr);
        });
    }

</script>

{{> layout/footer}}
